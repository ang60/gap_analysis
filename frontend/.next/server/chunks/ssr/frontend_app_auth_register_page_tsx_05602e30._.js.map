{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/lord-charles/Code/work/gap_analysis/frontend/app/auth/register/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { Shield, Eye, EyeOff, Check, AlertCircle } from 'lucide-react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport api from '@/lib/api';\n\ninterface Branch {\n  id: number;\n  name: string;\n  region: string;\n  organizationId: number;\n}\n\nexport default function RegisterPage() {\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [branches, setBranches] = useState<Branch[]>([]);\n  const [loadingBranches, setLoadingBranches] = useState(true);\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    branchId: '',\n    agreeToTerms: false,\n  });\n  const { register, isLoading, error, clearError } = useAuth();\n\n  // Fetch branches for the default organization\n  useEffect(() => {\n    const fetchBranches = async () => {\n      try {\n        const response = await api.get('/branches?organizationId=1');\n        setBranches(response.data);\n      } catch (error) {\n        console.error('Failed to fetch branches:', error);\n      } finally {\n        setLoadingBranches(false);\n      }\n    };\n\n    fetchBranches();\n  }, []);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    clearError();\n\n    // Validate passwords match\n    if (formData.password !== formData.confirmPassword) {\n      // You could set a local error state here\n      return;\n    }\n\n    try {\n      await register({\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        email: formData.email,\n        password: formData.password,\n        // Role will be set to STAFF by default on the backend\n        branchId: formData.branchId ? parseInt(formData.branchId) : undefined,\n      });\n    } catch (error) {\n      // Error is handled by the auth context\n      console.error('Registration failed:', error);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value, type } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? (e.target as HTMLInputElement).checked : value,\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        {/* Header */}\n        <div className=\"text-center\">\n          <div className=\"flex justify-center\">\n            <div className=\"w-16 h-16 bg-blue-600 rounded-2xl flex items-center justify-center\">\n              <Shield className=\"h-8 w-8 text-white\" />\n            </div>\n          </div>\n          <h2 className=\"mt-6 text-3xl font-bold text-gray-900\">\n            Create your account\n          </h2>\n          <p className=\"mt-2 text-sm text-gray-600\">\n            Join GapAnalysis Pro and start your compliance journey\n          </p>\n          <div className=\"mt-3 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n            <p className=\"text-sm text-blue-800\">\n              <strong>Note:</strong> Your account will be created with Staff role by default. \n              An administrator will assign your appropriate role after registration.\n            </p>\n          </div>\n        </div>\n\n        {/* Error Message */}\n        {error && (\n          <div className=\"mt-4 p-4 bg-red-50 border border-red-200 rounded-lg flex items-center space-x-2\">\n            <AlertCircle className=\"h-5 w-5 text-red-500\" />\n            <p className=\"text-sm text-red-700\">{error}</p>\n          </div>\n        )}\n\n        {/* Registration Form */}\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700\">\n                  First name\n                </label>\n                <input\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  type=\"text\"\n                  autoComplete=\"given-name\"\n                  required\n                  value={formData.firstName}\n                  onChange={handleInputChange}\n                  className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 text-black focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"John\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700\">\n                  Last name\n                </label>\n                <input\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  type=\"text\"\n                  autoComplete=\"family-name\"\n                  required\n                  value={formData.lastName}\n                  onChange={handleInputChange}\n                  className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 text-black focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"Mwangi\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                value={formData.email}\n                onChange={handleInputChange}\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"john.mwangi@bank.co.ke\"\n              />\n            </div>\n\n\n            <div>\n              <label htmlFor=\"branchId\" className=\"block text-sm font-medium text-gray-700\">\n                Branch\n              </label>\n              <select\n                id=\"branchId\"\n                name=\"branchId\"\n                value={formData.branchId}\n                onChange={handleInputChange}\n                disabled={loadingBranches}\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm text-black focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100 disabled:cursor-not-allowed\"\n              >\n                <option value=\"\">\n                  {loadingBranches ? 'Loading branches...' : 'Select a branch'}\n                </option>\n                {branches.map((branch) => (\n                  <option key={branch.id} value={branch.id}>\n                    {branch.name} - {branch.region}\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                Password\n              </label>\n              <div className=\"mt-1 relative\">\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  autoComplete=\"new-password\"\n                  required\n                  value={formData.password}\n                  onChange={handleInputChange}\n                  className=\"block w-full px-3 py-2 pr-10 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 text-black focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"Create a strong password\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                  ) : (\n                    <Eye className=\"h-5 w-5 text-gray-400\" />\n                  )}\n                </button>\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n                Confirm password\n              </label>\n              <div className=\"mt-1 relative\">\n                <input\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  type={showConfirmPassword ? 'text' : 'password'}\n                  autoComplete=\"new-password\"\n                  required\n                  value={formData.confirmPassword}\n                  onChange={handleInputChange}\n                  className=\"block w-full px-3 py-2 pr-10 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 text-black focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"Confirm your password\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                >\n                  {showConfirmPassword ? (\n                    <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                  ) : (\n                    <Eye className=\"h-5 w-5 text-gray-400\" />\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex items-center\">\n            <input\n              id=\"agreeToTerms\"\n              name=\"agreeToTerms\"\n              type=\"checkbox\"\n              required\n              checked={formData.agreeToTerms}\n              onChange={handleInputChange}\n              className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n            />\n            <label htmlFor=\"agreeToTerms\" className=\"ml-2 block text-sm text-gray-700\">\n              I agree to the{' '}\n              <Link href=\"/terms\" className=\"text-blue-600 hover:text-blue-500\">\n                Terms of Service\n              </Link>{' '}\n              and{' '}\n              <Link href=\"/privacy\" className=\"text-blue-600 hover:text-blue-500\">\n                Privacy Policy\n              </Link>\n            </label>\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                <Check className=\"h-5 w-5 text-blue-500 group-hover:text-blue-400\" />\n              </span>\n              {isLoading ? 'Creating account...' : 'Create account'}\n            </button>\n          </div>\n\n          <div className=\"text-center\">\n            <p className=\"text-sm text-gray-600\">\n              Already have an account?{' '}\n              <Link href=\"/auth/login\" className=\"font-medium text-blue-600 hover:text-blue-500\">\n                Sign in\n              </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}