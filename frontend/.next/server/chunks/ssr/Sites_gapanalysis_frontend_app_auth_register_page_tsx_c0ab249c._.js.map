{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/angie/Sites/gapanalysis/frontend/app/auth/register/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { Shield, Eye, EyeOff, Check, AlertCircle } from 'lucide-react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport api from '@/lib/api';\n\ninterface Organization {\n  id: number;\n  name: string;\n  domain: string;\n  subdomain: string;\n  isActive: boolean;\n}\n\nexport default function RegisterPage() {\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [organizations, setOrganizations] = useState<Organization[]>([]);\n  const [loadingOrganizations, setLoadingOrganizations] = useState(true);\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    organizationId: '',\n    agreeToTerms: false,\n  });\n  const { register, isLoading, error, clearError } = useAuth();\n  const [localError, setLocalError] = useState<string | null>(null);\n\n  // Fetch organizations for registration\n  useEffect(() => {\n    const fetchOrganizations = async () => {\n      try {\n        const response = await api.get('/organizations/public');\n        setOrganizations(response.data);\n      } catch (error) {\n        console.error('Failed to fetch organizations:', error);\n        // Set empty array on error to show \"No organizations available\"\n        setOrganizations([]);\n      } finally {\n        setLoadingOrganizations(false);\n      }\n    };\n\n    fetchOrganizations();\n  }, []);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    clearError();\n    setLocalError(null);\n\n    // Validate passwords match\n    if (formData.password !== formData.confirmPassword) {\n      setLocalError('Passwords do not match');\n      return;\n    }\n\n    // Organization selection is now optional - will default to organization ID 1\n\n    if (!formData.agreeToTerms) {\n      setLocalError('Please agree to the terms and conditions');\n      return;\n    }\n\n    try {\n      await register({\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        email: formData.email,\n        password: formData.password,\n        // Role will be set to STAFF by default on the backend\n        organizationId: formData.organizationId ? parseInt(formData.organizationId) : undefined,\n      });\n    } catch (error) {\n      // Error is handled by the auth context\n      console.error('Registration failed:', error);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value, type } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? (e.target as HTMLInputElement).checked : value,\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        {/* Header */}\n        <div className=\"text-center\">\n          <div className=\"flex justify-center\">\n            <div className=\"w-16 h-16 bg-blue-600 rounded-2xl flex items-center justify-center\">\n              <Shield className=\"h-8 w-8 text-white\" />\n            </div>\n          </div>\n          <h2 className=\"mt-6 text-3xl font-bold text-gray-900\">\n            Create your account\n          </h2>\n          <p className=\"mt-2 text-sm text-gray-600\">\n            Join GapAnalysis and start your compliance journey\n          </p>\n          <div className=\"mt-3 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n            <p className=\"text-sm text-blue-800\">\n              <strong>Note:</strong> Your account will be created with Staff role by default. \n              If you don't select an organization, you'll be assigned to the default organization.\n              An administrator will assign your appropriate role after registration.\n            </p>\n          </div>\n        </div>\n\n        {/* Error Message */}\n        {(error || localError) && (\n          <div className=\"mt-4 p-4 bg-red-50 border border-red-200 rounded-lg flex items-center space-x-2\">\n            <AlertCircle className=\"h-5 w-5 text-red-500\" />\n            <p className=\"text-sm text-red-700\">{error || localError}</p>\n          </div>\n        )}\n\n        {/* Registration Form */}\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700\">\n                  First name\n                </label>\n                <input\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  type=\"text\"\n                  autoComplete=\"given-name\"\n                  required\n                  value={formData.firstName}\n                  onChange={handleInputChange}\n                  className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 text-black focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"John\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700\">\n                  Last name\n                </label>\n                <input\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  type=\"text\"\n                  autoComplete=\"family-name\"\n                  required\n                  value={formData.lastName}\n                  onChange={handleInputChange}\n                  className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 text-black focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"Doe\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                value={formData.email}\n                onChange={handleInputChange}\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 text-black focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"john.doe@company.com\"\n              />\n            </div>\n\n\n            <div>\n              <label htmlFor=\"organizationId\" className=\"block text-sm font-medium text-gray-700\">\n                Organization <span className=\"text-gray-500\">(Optional)</span>\n              </label>\n              <select\n                id=\"organizationId\"\n                name=\"organizationId\"\n                value={formData.organizationId}\n                onChange={handleInputChange}\n                disabled={loadingOrganizations || organizations.length === 0}\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm text-black focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100 disabled:cursor-not-allowed\"\n              >\n                <option value=\"\">\n                  {loadingOrganizations \n                    ? 'Loading organizations...' \n                    : organizations.length === 0 \n                      ? 'No organizations available' \n                      : 'Select an organization (optional)'\n                  }\n                </option>\n                {organizations.map((organization) => (\n                  <option key={organization.id} value={organization.id}>\n                    {organization.name}\n                  </option>\n                ))}\n              </select>\n              {!loadingOrganizations && organizations.length === 0 && (\n                <p className=\"mt-1 text-sm text-amber-600\">\n                  No organizations available. You will be assigned to the default organization.\n                </p>\n              )}\n              {!loadingOrganizations && organizations.length > 0 && (\n                <p className=\"mt-1 text-sm text-gray-500\">\n                  If you don't select an organization, you will be assigned to the default organization.\n                </p>\n              )}\n            </div>\n            \n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                Password\n              </label>\n              <div className=\"mt-1 relative\">\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  autoComplete=\"new-password\"\n                  required\n                  value={formData.password}\n                  onChange={handleInputChange}\n                  className=\"block w-full px-3 py-2 pr-10 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 text-black focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"Create a strong password\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                  ) : (\n                    <Eye className=\"h-5 w-5 text-gray-400\" />\n                  )}\n                </button>\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n                Confirm password\n              </label>\n              <div className=\"mt-1 relative\">\n                <input\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  type={showConfirmPassword ? 'text' : 'password'}\n                  autoComplete=\"new-password\"\n                  required\n                  value={formData.confirmPassword}\n                  onChange={handleInputChange}\n                  className=\"block w-full px-3 py-2 pr-10 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 text-black focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"Confirm your password\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                >\n                  {showConfirmPassword ? (\n                    <EyeOff className=\"h-5 w-5 text-gray-400\" />\n                  ) : (\n                    <Eye className=\"h-5 w-5 text-gray-400\" />\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex items-center\">\n            <input\n              id=\"agreeToTerms\"\n              name=\"agreeToTerms\"\n              type=\"checkbox\"\n              required\n              checked={formData.agreeToTerms}\n              onChange={handleInputChange}\n              className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n            />\n            <label htmlFor=\"agreeToTerms\" className=\"ml-2 block text-sm text-gray-700\">\n              I agree to the{' '}\n              <Link href=\"/terms\" className=\"text-blue-600 hover:text-blue-500\">\n                Terms of Service\n              </Link>{' '}\n              and{' '}\n              <Link href=\"/privacy\" className=\"text-blue-600 hover:text-blue-500\">\n                Privacy Policy\n              </Link>\n            </label>\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                <Check className=\"h-5 w-5 text-blue-500 group-hover:text-blue-400\" />\n              </span>\n              {isLoading ? 'Creating account...' : 'Create account'}\n            </button>\n          </div>\n\n          <div className=\"text-center\">\n            <p className=\"text-sm text-gray-600\">\n              Already have an account?{' '}\n              <Link href=\"/auth/login\" className=\"font-medium text-blue-600 hover:text-blue-500\">\n                Sign in\n              </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}